---
version: "1.1.0"
name: "MainPlan"
root:
  testCase:
    nodeName: "MainPlan"
    children:
      - callKeyword:
          keyword: "Composite"
      - callPlan:
          nodeName: "SubPlan"
          planId: "66155931b1484e71a63e9faf"
      - callKeyword:
          keyword: "GroovyKeyword"
      - callKeyword:
          nodeName: "CallKeyword"
          children:
            - assert:
                continueParentNodeExecutionOnError: true
                actual: "test"
                operator: "IS_NULL"
          keyword: "GroovyKeyword"
      - callPlan:
          selectionAttributes:
            - name: "SubPlan"
      - check:
          expression: "true"
      - dataSet:
          dataSource:
            sequence:
              forWrite: false
              start: 1
              end: 2
              inc: 1
      - echo:
          text: "test"
      - export:
          skipNode: true
      - for: {}
      - forEach:
          dataSource:
            sequence:
              start: 1
              end: 2
              inc: 1
      - if:
          condition:
            expression: "true"
      - placeholder: {}
      - retryIfFails: {}
      - return: {}
      - script:
          script: "var test=\"test\";"
      - sequence: {}
      - session: {}
      - set:
          key: "test"
          value: "test"
      - sleep: {}
      - switch:
          children:
            - case:
                value: "test"
          expression:
            expression: "test"
      - synchronized: {}
      - testCase: {}
      - testScenario: {}
      - testSet: {}
      - threadGroup: {}
      - while:
          condition:
            expression: "false"
    after:
      continueOnError: false
      steps:
        - performanceAssert:
            measurementName: "GroovyKeyword"
            expectedValue: 3000